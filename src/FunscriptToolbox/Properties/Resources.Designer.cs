//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FunscriptToolbox.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FunscriptToolbox.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Workers&quot;: [
        ///    // -----------------------------
        ///    // Audio extraction
        ///    {
        ///      &quot;Id&quot;: &quot;audio&quot;,
        ///      &quot;Enabled&quot;: true
        ///    },
        ///    {
        ///      &quot;Id&quot;: &quot;audio-clean-waveform&quot;,
        ///      &quot;Enabled&quot;: true,
        ///    },
        ///    // -----------------------------
        ///    // Creating initial manual-input source 
        ///    {
        ///      &quot;Id&quot;: &quot;full-ai&quot;,
        ///      &quot;Enabled&quot;: true,
        ///    },
        ///    {
        ///      &quot;Id&quot;: &quot;full-ai-refined&quot;,
        ///      // [OPTION] Enable to get a second pass on the audio that should improve the timings (i.e. start and e [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string @__FSTB_SubtitleGenerator_AutomaticHQWorkflow_override {
            get {
                return ResourceManager.GetString("__FSTB_SubtitleGenerator_AutomaticHQWorkflow_override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Workers&quot;: [
        ///    // -----------------------------
        ///    // Audio extraction
        ///    {
        ///      &quot;Id&quot;: &quot;audio&quot;,
        ///      &quot;Enabled&quot;: true
        ///    },
        ///    {
        ///      &quot;Id&quot;: &quot;audio-clean-waveform&quot;,
        ///      &quot;Enabled&quot;: true,
        ///    },
        ///    // -----------------------------
        ///    // Creating initial manual-input source 
        ///    {
        ///      &quot;Id&quot;: &quot;full-ai&quot;,
        ///      &quot;Enabled&quot;: true,
        ///    },
        ///    {
        ///      &quot;Id&quot;: &quot;full-ai-refined&quot;,
        ///      // [OPTION] Enable to get a second pass on that should improve the timings (i.e. start and end) of the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string @__FSTB_SubtitleGenerator_ManualHQWorkflow_override {
            get {
                return ResourceManager.GetString("__FSTB_SubtitleGenerator_ManualHQWorkflow_override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;SharedObjects&quot;: [
        ///    {
        ///      &quot;$id&quot;: &quot;TranscriberToolPurfviewWhisper&quot;,
        ///      // Remove &apos;//&apos; on next line and change [TOREPLACE-WITH-PathToPurfview] to the path of SubtitleEdit\Whisper (with &apos;\&apos; doubled =&gt; &apos;\\&apos;).
        ///      //&quot;ApplicationFullPath&quot;: &quot;[TOREPLACE-WITH-PathToPurfview]\\Purfview-Whisper-Faster\\faster-whisper-xxl.exe&quot;,
        ///	},
        ///    {
        ///      &quot;$id&quot;: &quot;AIEngineClaudeSonnet&quot;,
        ///      &quot;$type&quot;: &quot;AIEngineAPI&quot;,
        ///      &quot;BaseAddress&quot;: &quot;https://api.anthropic.com/v1&quot;,
        ///      &quot;Model&quot;: &quot;Claude-Sonnet-4&quot;,
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string @__FSTB_SubtitleGenerator_override {
            get {
                return ResourceManager.GetString("__FSTB_SubtitleGenerator_override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;Workers&quot;: [
        ///    // -----------------------------
        ///    // Audio extraction
        ///    {
        ///      &quot;AudioExtractionId&quot;: &quot;audio&quot;,
        ///      &quot;Enabled&quot;: true
        ///    },
        ///    {
        ///      &quot;AudioExtractionId&quot;: &quot;audio-clean-waveform&quot;,
        ///      &quot;Enabled&quot;: true,
        ///    },
        ///    // -----------------------------
        ///    // Transcription with Whisper with a basic google translation
        ///    {
        ///      &quot;TranscriptionId&quot;: &quot;full-whisper&quot;,
        ///      &quot;Enabled&quot;: true,
        ///    },
        ///    {
        ///      &quot;TranscriptionId&quot;: &quot;full&quot;,
        ///      &quot;Enabled&quot;: true,
        ///      &quot;Source [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string @__FSTB_SubtitleGenerator_Staging_override {
            get {
                return ResourceManager.GetString("__FSTB_SubtitleGenerator_Staging_override", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ### **Revised System Prompt (v2025-09-25)**
        ///
        ///This version establishes a clear, non-conflicting hierarchy of operations: first, pick the absolute best text for the current node *in isolation*. Only then, as a separate step, check if that finalized text can be merged.
        ///
        ///```markdown
        ///# System Prompt: The Arbiter&apos;s Protocol (version 2025-09-09)
        ///
        ///### **Role**
        ///
        ///You are a meticulous Subtitle Editor. Your function is to select the best translation candidate, create the most natural and consistent character voice, and [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ArbitrerSystemPrompt {
            get {
                return ResourceManager.GetString("ArbitrerSystemPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # ATTENTION: FULL-SPECTRUM QA AUDIT INITIATED (SPEC 2025-09-09)
        ///
        ///**To the Subtitle Editor:** This batch is undergoing a full-spectrum Quality Assurance audit. Your output will be validated by an automated linter for strict adherence to protocol. Zero deviations are permitted.
        ///
        ///The audit will programmatically check three critical metrics:
        ///
        ///**QA Metric 1: Strict Physical Constraint Compliance (ZERO TOLERANCE)**
        ///*   **Objective:** Every finalized subtitle must adhere perfectly to the physical format rules.
        ///*   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ArbitrerUserPrompt {
            get {
                return ResourceManager.GetString("ArbitrerUserPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        /////  &quot;SourceLanguage&quot;: &quot;es&quot;,
        ///  &quot;Workers&quot;: [
        /////    {
        /////      &quot;$type&quot;: &quot;TranscriberImageAI&quot;,
        /////      &quot;TranscriptionId&quot;: &quot;visual-analyst&quot;,
        /////      &quot;Enabled&quot;: true
        /////    }
        ///  ]
        ///}.
        /// </summary>
        internal static string Example_wipconfig {
            get {
                return ResourceManager.GetString("Example_wipconfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///REM ScriptVersion:2.0
        ///
        ///set &quot;path=[[FunscriptToolboxFolder]];%path%&quot;
        ///
        ///:start
        ///echo --- subtitles.create ---
        ///&quot;FunscriptToolbox.exe&quot; ^
        ///		subtitles.create ^
        ///		--config &quot;.\--FSTB-SubtitleGenerator.config&quot; ^
        ///		--recursive ^
        ///		--verbose ^
        ///		&quot;*.mp4&quot; &quot;*.vseq&quot;
        ///pause
        ///REM Remove REM from the start of the next line to have a looping script (i.e. run tool, press space, run tool, ...)
        ///REM goto start
        ///.
        /// </summary>
        internal static string FSTB_CreateSubtitles_bat {
            get {
                return ResourceManager.GetString("FSTB_CreateSubtitles_bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///REM ScriptVersion:1.1
        ///
        ///echo How to use:
        ///echo 1. Move new-scene.mp4 and new-scene.funscript to this folder.
        ///echo 2. Start this script.
        ///echo 3. It will extracts the audio from new-scene.mp4 and add the audio signature to the new-scene.funscript.
        ///echo 4. It will allows user to synchronize your .funscript to a different version of the video 
        ///echo    (with the audiosync.createfunscript or audiosync.verifyfunscript).
        ///echo.
        ///
        ///set &quot;path=[[FunscriptToolboxFolder]];%path%&quot;
        ///
        ///FunscriptToolbox
        ///ech [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FSTB_GenericCmd_bat {
            get {
                return ResourceManager.GetString("FSTB_GenericCmd_bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///REM ScriptVersion:1.0
        ///
        ///echo How to use:
        ///echo 1. Move new-scene.mp4 and new-scene.funscript to this folder.
        ///echo 2. Start this script.
        ///echo 3. It will extracts the audio from new-scene.mp4 and add the audio signature to the new-scene.funscript.
        ///echo 4. It will allows user to synchronize your .funscript to a different version of the video 
        ///echo    (with the audiosync.createfunscript or audiosync.verifyfunscript).
        ///echo.
        ///
        ///set &quot;path=[[FunscriptToolboxFolder]];%path%&quot;
        ///
        ///echo --- audiosync.cr [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FSTB_PrepareScriptForRelease_bat {
            get {
                return ResourceManager.GetString("FSTB-PrepareScriptForRelease_bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///REM ScriptVersion:1.0
        ///
        ///echo How to use:
        ///echo 1. Move scene-to-script.mp4 to this folder.
        ///echo 2. Start this script.
        ///echo 3. It will starts by creating a scene-to-script.mvs-p-frames.mp4, which is a
        ///echo    version of the video optimized to get stable motionvectors (i.e. only P-frames).
        ///echo    This step is using the ffmpegFilter (value: VRLeft, VRMosaic, 2D or a custom filter) and ffmpegHeight parameters.
        ///echo 4. It will then extracts the motion vector from the video and create scene-to-s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FSTB_PrepareVideoForOFS_bat {
            get {
                return ResourceManager.GetString("FSTB-PrepareVideoForOFS_bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///REM ScriptVersion:1.0
        ///
        ///echo How to use:
        ///echo 1. Move scene.funscript, scene.asig (if .funscript doesn’t include audiosignature) and scene.mp4 to this folder.
        ///echo 2. Start this script.
        ///echo 3a. If your video version is same as the scripter’s version, you’ll see: Audio signatures are SYNCHRONIZED. Script is GOOD.
        ///echo 3b. If your version is different, you’ll see the offsets and this message: Creating synchronized version of the funscript.
        ///echo     and a synchronized version script will have [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FSTB_VerifyDownloadedScripts_bat {
            get {
                return ResourceManager.GetString("FSTB_VerifyDownloadedScripts_bat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --
        ///-- json.lua
        ///--
        ///-- Copyright (c) 2020 rxi
        ///--
        ///-- Permission is hereby granted, free of charge, to any person obtaining a copy of
        ///-- this software and associated documentation files (the &quot;Software&quot;), to deal in
        ///-- the Software without restriction, including without limitation the rights to
        ///-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
        ///-- of the Software, and to permit persons to whom the Software is furnished to do
        ///-- so, subject to the following conditions:
        ///--        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string json_lua {
            get {
                return ResourceManager.GetString("json_lua", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- FunscriptToolbox.MotionVectors LUA Wrappper Version 1.0.0
        ///json = require &quot;json&quot;
        ///server_connection = require &quot;server_connection&quot;
        ///virtual_actions = require &quot;virtual_actions&quot;
        ///
        ///-- global var
        ///FTMVSFullPath = &quot;[[FunscriptToolboxExePathInLuaFormat]]&quot;
        ///PluginVersion = &quot;[[PluginVersion]]&quot;
        ///configFullPath = ofs.ExtensionDir() .. &quot;\\config.json&quot;
        ///
        ///config = {}
        ///connection = nil
        ///virtualActions = {}
        ///lastVideoFullPath = nil
        ///lastMvsFullPath = nil
        ///
        ///function init()
        ///    printWithTime(&quot;Plugin Version:&quot;, PluginV [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string main_lua {
            get {
                return ResourceManager.GetString("main_lua", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- FunscriptToolbox.MotionVectors LUA server_connection
        ///json = require &quot;json&quot;
        ///
        ///local server_connection = {}
        ///
        ///function server_connection:new(FTMVSFullPath, enableLogs)
        ///	local o = { 
        ///		FTMVSFullPath = FTMVSFullPath,
        ///		cantFindFTMVSFullPath = false,
        ///		enableLogs = enableLogs,
        ///		serverProcessHandle = nil,
        ///		requests = {},
        ///		lastTimeTaken = 0,
        ///		serverTimeout = 300,
        ///		status = &apos;&apos;,
        ///		statusTooltip = nil
        ///	}
        ///	if not fileExist(o.FTMVSFullPath) then
        ///		local message = &apos;missing &apos; .. o.FTMVSFullPath
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string server_connection_lua {
            get {
                return ResourceManager.GetString("server_connection_lua", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # TRANSCRIPTION AND VAD MANDATE (version 2025-09-04)
        ///
        ///### Role
        ///You are an advanced audio intelligence engine. Your primary function is to act as a highly precise, micro-segmenting Voice Activity Detection (VAD) system combined with a verbatim transcriptionist. You are an expert in the vocabulary and cadence of Japanese adult media, capable of deconstructing human speech into its smallest coherent, timed components.
        ///
        ///### Mission
        ///Given a single, complete audio file, your mission is to meticulously segme [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranscriberAudioFullSystemPrompt {
            get {
                return ResourceManager.GetString("TranscriberAudioFullSystemPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The audio should be in [TranscriptionLanguage].
        ///.
        /// </summary>
        internal static string TranscriberAudioFullUserPrompt {
            get {
                return ResourceManager.GetString("TranscriberAudioFullUserPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # AUDIO-TEXT ALIGNMENT AND ANNOTATION MANDATE (version 2025-09-07)
        ///
        ///### Role
        ///You are a Precision Audio-Text Alignment and Annotation Engine. Your function is to process a batch of audio clips and a corresponding text string, precisely locate the audio of the text within the clip, and generate a new string that annotates the leading, trailing, and internal pauses.
        ///
        ///### Mission
        ///Given an array of `AudioClip` and an associated `OriginalVoiceText`, your mission is to produce a single JSON arrqay of result object [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranscriberAudioPrecisionSegmentRefinerSystemPrompt {
            get {
                return ResourceManager.GetString("TranscriberAudioPrecisionSegmentRefinerSystemPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string TranscriberAudioPrecisionSegmentRefinerUserPrompt {
            get {
                return ResourceManager.GetString("TranscriberAudioPrecisionSegmentRefinerUserPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # TRANSCRIPTION MANDATE (version 2025-08-20)
        ///### Role
        ///You are an advanced audio intelligence engine specializing in Japanese transcription. Your function is to process a sequential stream of data packets, each containing metadata and a corresponding audio chunk. You will deconstruct *what* is said with the highest possible fidelity. You are an expert in the vocabulary and cadence of Japanese adult media, understanding that this includes both explicit scenes and mundane, plot-building dialogue.
        ///### Mission
        ///F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranscriberAudioSingleVADSystemPrompt {
            get {
                return ResourceManager.GetString("TranscriberAudioSingleVADSystemPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The audio should be in [TranscriptionLanguage].
        ///.
        /// </summary>
        internal static string TranscriberAudioSingleVADUserPrompt {
            get {
                return ResourceManager.GetString("TranscriberAudioSingleVADUserPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # OPTICAL INTELLIGENCE (OPTINT) MANDATE (version 2025-08-25)
        ///### Role
        ///You are a specialized Optical Intelligence Operative. Your sole function is to extract textual data from a batch of visual inputs (images). You will perform this task with precision and strict adherence to the provided directives.
        ///### Mission
        ///For each data packet you receive in a request, you will analyze the provided image, identify and transcribe the relevant text as specified by its corresponding `GrabOnScreenText` directive. You will  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranscriberOnScreenTextSystemPrompt {
            get {
                return ResourceManager.GetString("TranscriberOnScreenTextSystemPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # **MULTIMODAL TRANSLATION AUGMENTATION (MTA) MANDATE (version 2025-09-25)**
        ///
        ///### **Role &amp; Mission**
        ///
        ///You are a Multimodal Translation Augmentation Specialist (MTAS). Your job is to analyze an image and its corresponding `VoiceText` to create a concise JSON output for a human translator. You must process a batch of nodes, treating each one as a completely separate task.
        ///
        ///### **Core Directives (Non-Negotiable)**
        ///
        ///1.  **The Per-Node Firewall:** You MUST process each node in the input array one at a time. The  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranscriberVisualAnalystSystemPrompt {
            get {
                return ResourceManager.GetString("TranscriberVisualAnalystSystemPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # URGENT: HIGH-STAKES ACCURACY AUDIT (VALIDATION 2025-09-05)
        ///
        ///**Attention MTAS:** This entire batch of nodes is subject to a mandatory, zero-tolerance accuracy audit. Your output will be programmatically validated against the visual evidence.
        ///
        ///**The Single Metric for Success:** Your absolute and unwavering adherence to the **&quot;Strict Visual Grounding Protocol&quot;** outlined in your mandate.
        ///
        ///**Definition of a Critical Hallucination Failure:**
        ///An analysis is given on the wrong node (i.e. describing image from St [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranscriberVisualAnalystUserPrompt {
            get {
                return ResourceManager.GetString("TranscriberVisualAnalystUserPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # TRANSLATION OPERATIVE MANDATE: The Maverick (version 2025-09-25)
        ///
        ///### Role
        ///You are &apos;The Maverick&apos;. You are a high-risk, high-reward narrative amplifier. Your function is to take the Analyst&apos;s directives and produce the most impactful, evocative, and clever translation possible, prioritizing narrative punch over literal accuracy.
        ///### Mission
        ///Your mission is to maximize the narrative impact for an audience that does not understand the source language. You will achieve this by re-interpreting dialogue to mor [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranslatorMaverickUserPrompt {
            get {
                return ResourceManager.GetString("TranslatorMaverickUserPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # TRANSLATION OPERATIVE MANDATE: The Naturalist (version 2025-09-25)
        ///### Role
        ///You are &apos;The Naturalist&apos;. Your function is to translate dialogue into authentic, age-appropriate, and situationally-genuine language. You are the bridge between a literal script and a believable human performance.
        ///### Mission
        ///Your mission is to discard stilted, overly-literal translations in favor of the natural cadence, idioms, and colloquialisms that a real person, matching the character profile from the Analyst&apos;s report, would  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranslatorNaturalistUserPrompt {
            get {
                return ResourceManager.GetString("TranslatorNaturalistUserPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to # TRANSLATION OPERATIVE MANDATE: The Foundational Protocol (2025-09-25)
        ///### Role
        ///You are a specialized Translation Operative. Your domain is the linguistic and emotional conversion of adult film subtitles. You are the first and most critical link in the production chain.
        ///### Mission
        ///Your mission is to receive a JSON data stream containing transcribed dialogue and contextual metadata. 
        ///You will process each node, translating the original Japanese text (OnScreenText or VoiceText) into natural, compelling Engl [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TranslatorSystemPrompt {
            get {
                return ResourceManager.GetString("TranslatorSystemPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- FunscriptToolbox.MotionVectors LUA virtual_actions
        ///local virtual_actions = {}
        ///
        ///function virtual_actions:new(scriptIdx, config)
        ///	local o = { 
        ///		ScriptIdx = scriptIdx,		
        ///		Config = config,
        ///		FrameDurationInSec = 167,
        ///		GeneratedActionsOriginal = {},
        ///		ActionsInTimeline = nil
        ///	}
        ///	setmetatable(o, {__index = virtual_actions})
        ///	return o
        ///end
        ///
        ///function virtual_actions:init(userAction, actions, frameDurationInMs)
        ///	self.GeneratedActionsOriginal = {}
        ///	self:removeAllVirtualActionsInTimelime(userActi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string virtual_actions_lua {
            get {
                return ResourceManager.GetString("virtual_actions_lua", resourceCulture);
            }
        }
    }
}
